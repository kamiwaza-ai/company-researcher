import { LinkedInData, CompanyMapData } from '@/types';

// Helper function to format date
const formatDate = () => {
  return new Date().toISOString().split('T')[0];
};

// Helper to clean text and ensure it's markdown-safe
const cleanText = (text: string): string => {
  return text?.replace(/[#_*[\]()]/g, '\\$&') || '';
};

// Convert LinkedIn data to markdown
const convertLinkedInData = (data: LinkedInData | null): string => {
  if (!data) return '';
  
  return `## LinkedIn Information
${data.text || ''}
${data.url ? `\n[View on LinkedIn](${data.url})` : ''}
`;
};

// Convert company summary to markdown
const convertCompanySummary = (summary: any): string => {
  if (!summary) return '';
  
  return `## Company Summary
${summary}
`;
};

// Convert competitors to markdown
const convertCompetitors = (competitors: any[] | null): string => {
  if (!competitors?.length) return '';
  
  return `## Competitors
${competitors.map(comp => `- ${comp.title}${comp.summary ? `: ${comp.summary}` : ''}`).join('\n')}
`;
};

// Convert news to markdown
const convertNews = (news: any[] | null): string => {
  if (!news?.length) return '';
  
  return `## Recent News
${news.map(item => `- [${cleanText(item.title)}](${item.url})`).join('\n')}
`;
};

// Convert social media data to markdown
const convertSocialMedia = (
  twitterData: any,
  youtubeVideos: any[] | null,
  redditPosts: any[] | null,
  githubUrl: string | null,
  tiktokData: any
): string => {
  let socialSection = '## Social Media Presence\n\n';

  if (twitterData) {
    socialSection += `### Twitter\n${twitterData.text || ''}\n\n`;
  }

  if (youtubeVideos?.length) {
    socialSection += `### YouTube\n${youtubeVideos.map(video => 
      `- [${cleanText(video.title)}](${video.url})`
    ).join('\n')}\n\n`;
  }

  if (redditPosts?.length) {
    socialSection += `### Reddit Discussions\n${redditPosts.map(post =>
      `- [${cleanText(post.title)}](${post.url})`
    ).join('\n')}\n\n`;
  }

  if (githubUrl) {
    socialSection += `### GitHub\n[View GitHub Repository](${githubUrl})\n\n`;
  }

  if (tiktokData) {
    socialSection += `### TikTok\n${tiktokData.text || ''}\n\n`;
  }

  return socialSection;
};

// Convert funding and financial data to markdown
const convertFinancialData = (
  fundingData: any,
  financialReport: any,
  crunchbaseData: any,
  pitchbookData: any,
  tracxnData: any
): string => {
  let financialSection = '## Financial Information\n\n';

  if (fundingData) {
    financialSection += `### Funding\n${fundingData.text || ''}\n\n`;
  }

  if (financialReport) {
    financialSection += `### Financial Report\n${financialReport.text || ''}\n\n`;
  }

  if (crunchbaseData) {
    financialSection += `### Crunchbase\n${crunchbaseData.text || ''}\n\n`;
  }

  if (pitchbookData) {
    financialSection += `### PitchBook\n${pitchbookData.text || ''}\n\n`;
  }

  if (tracxnData) {
    financialSection += `### Tracxn\n${tracxnData.text || ''}\n\n`;
  }

  return financialSection;
};

// Main function to generate complete markdown
export const generateResearchMarkdown = (
  companyUrl: string,
  data: {
    linkedinData: LinkedInData | null;
    companySummary: any;
    competitors: any[] | null;
    news: any[] | null;
    twitterProfileText: any;
    youtubeVideos: any[] | null;
    redditPosts: any[] | null;
    githubUrl: string | null;
    tiktokData: any;
    fundingData: any;
    financialReport: any;
    crunchbaseData: any;
    pitchbookData: any;
    tracxnData: any;
    companyMap: CompanyMapData | null;
  }
): string => {
  const {
    linkedinData,
    companySummary,
    competitors,
    news,
    twitterProfileText,
    youtubeVideos,
    redditPosts,
    githubUrl,
    tiktokData,
    fundingData,
    financialReport,
    crunchbaseData,
    pitchbookData,
    tracxnData,
    companyMap,
  } = data;

  const date = formatDate();
  
  return `# Company Research: ${companyUrl}
Generated on: ${date}

${convertLinkedInData(linkedinData)}

${convertCompanySummary(companySummary)}

${convertCompetitors(competitors)}

${convertNews(news)}

${convertSocialMedia(
    twitterProfileText,
    youtubeVideos,
    redditPosts,
    githubUrl,
    tiktokData
  )}

${convertFinancialData(
    fundingData,
    financialReport,
    crunchbaseData,
    pitchbookData,
    tracxnData
  )}

---
Generated by Company Researcher
`;
};

// Function to trigger markdown download
export const downloadMarkdown = (companyUrl: string, markdownContent: string) => {
  const filename = `${companyUrl.replace(/[^a-z0-9]/gi, '_')}_research_${formatDate()}.md`;
  const blob = new Blob([markdownContent], { type: 'text/markdown' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}; 